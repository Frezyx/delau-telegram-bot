package main

import (
	"bytes"
	"encoding/json"
	"net/http"

	tgbot "github.com/go-telegram-bot-api/telegram-bot-api"
)

func listenAuth(update tgbot.Update, regRequests map[int64]AuthRequest, bot *tgbot.BotAPI, authURL string, checkEmailURL string) tgbot.MessageConfig {
	msg := tgbot.NewMessage(update.Message.Chat.ID, "üòø –Ø –Ω–µ –∑–Ω–∞—é –∫–∞–∫ –æ—Ç–≤–µ—Ç–∏—Ç—å –Ω–∞ —ç—Ç–æ—Ç –≤–æ–ø—Ä–æ—Å\n"+"–ü–æ–ø—Ä–æ–±—É–π—Ç–µ —á—Ç–æ-—Ç–æ –æ—Ç—Å—é–¥–∞ ‚û°Ô∏è /help")

	if thisReq, ok := regRequests[update.Message.Chat.ID]; ok {
		thisReq.Password = update.Message.Text
		regRequests[update.Message.Chat.ID] = thisReq
		if thisReq.Password != "" && thisReq.Email != "" {
			crossMsg := tgbot.NewMessage(
				update.Message.Chat.ID,
				"‚úÖ –í—ã –¥–æ–±–∞–≤–∏–ª–∏ –≤–∞—à e-mail.\n"+
					"‚úÖ –í—ã –¥–æ–±–∞–≤–∏–ª–∏ –≤–∞—à e-mail –∏ –ø–∞—Ä–æ–ª—å.\n"+
					"–ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–∞—à –ø–∞—Ä–æ–ª—å –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ.")
			bot.Send(crossMsg)
			buf, err := json.Marshal(regRequests[update.Message.Chat.ID])
			if err != nil {
				msg = tgbot.NewMessage(update.Message.Chat.ID, "‚ö†Ô∏è –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏")
			}
			data, err := http.Post(authURL, "application/json", bytes.NewBuffer(buf))
			if data.StatusCode == 200 {
				msg = tgbot.NewMessage(
					update.Message.Chat.ID,
					"üòÉ –û—Ç–ª–∏—á–Ω–æ\n"+
						"‚úÖ –í—ã –ø—Ä–æ—à–ª–∏ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é.\n"+
						"‚è∞ –¢–µ–ø–µ—Ä—å –≤—ã –ø–æ–ª—É—á–∞–µ—Ç–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ—Ç –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è Dealu")
				regRequests[update.Message.Chat.ID] = AuthRequest{}
			} else {
				msg = tgbot.NewMessage(
					update.Message.Chat.ID,
					"‚ö†Ô∏è –í—ã –≤–≤–µ–ª–∏ –Ω–µ–≤–µ—Ä–Ω—ã–π –ø–∞—Ä–æ–ª—å\n"+
						"–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –µ–≥–æ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å –∏ –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–ø—ã—Ç–∫—É")
			}
		} else {
		}
	} else {
		if update.Message.Text != "" {
			data, _ := http.Get(checkEmailURL + update.Message.Text)
			if data.StatusCode == 200 {
				msg = tgbot.NewMessage(update.Message.Chat.ID, "‚úÖ –í—ã –¥–æ–±–∞–≤–∏–ª–∏ –≤–∞—à e-mail.\n–¢–µ–ø–µ—Ä—å –≤–≤–µ–¥–∏—Ç–µ –≤–∞—à –ø–∞—Ä–æ–ª—å :")
				regRequests[update.Message.Chat.ID] = AuthRequest{
					Email:    update.Message.Text,
					Password: "",
					ChatID:   update.Message.Chat.ID,
				}
			} else {
				msg = tgbot.NewMessage(update.Message.Chat.ID, "‚ö†Ô∏è –í–≤–µ–¥–µ–Ω–Ω—ã–π email –Ω–µ –ø—Ä–∏–Ω–∞–¥–ª–µ–∂–∏—Ç –∞–∫–∫–∞—É–Ω—Ç—É.")
			}
		}
	}
	return msg
}

func getHelpMessage(update tgbot.Update) tgbot.MessageConfig {
	msg := tgbot.NewMessage(
		update.Message.Chat.ID,
		"ü§ñ *–ö–æ–º–∞–Ω–¥—ã –±–æ—Ç–∞:*\n"+
			"\n"+
			"/login ‚û°Ô∏è –ê–≤—Ç–æ—Ä–∏–∑–∏—Ä–æ–≤–∞—Ç—å—Å—è, –¥–ª–∞ –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—ã —Å –±–æ—Ç–æ–º\n"+
			"/logout ‚û°Ô∏è –û—Ç–≤—è–∑–∞—Ç—å –¥–∞–Ω–Ω—ã–π —á–∞—Ç –æ—Ç –∞–∫–∫–∞—É–Ω—Ç–∞ –∏ –ø—Ä–µ–∫—Ä–∞—Ç–∏—Ç—å –ø–æ–ª—É—á–∞—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è\n"+
			"/help ‚û°Ô∏è –í—Å–µ –∑–∞–ø—Ä–æ—Å—ã –±–æ—Ç–∞\n"+
			"/info ‚û°Ô∏è –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±–æ—Ç–µ\n")
	msg.ParseMode = "Markdown"
	return msg
}

func getInfoMessage(update tgbot.Update) tgbot.MessageConfig {
	return tgbot.NewMessage(
		update.Message.Chat.ID,
		"–ú—ã —á–∞—Å—Ç–æ –ø—Ä–æ–≤–æ–¥–∏–º –≤—Ä–µ–º—è –≤ —Å–æ—Ü–∏–∞–ª—å–Ω—ã—Ö —Å–µ—Ç—è—Ö –∏ –º–µ—Å—Å–µ–Ω–¥–µ—Ä–∞—Ö –∏ –∑–∞–±—ã–≤–∞–µ–º –ø—Ä–æ –ª–∏—á–Ω—ã–µ –¥–µ–ª–∞ –∏ –∑–∞–¥–∞—á–∏ Delau - –ø—Ä–æ–µ–∫—Ç, —Å–æ–∑–¥–∞–Ω–Ω—ã–π –¥–ª—è —Ç–æ–≥–æ, —á—Ç–æ–± –≤—ã —Å–º–æ–≥–ª–∏ –ø–æ–ª—É—á–∞—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –∑–∞–¥–∞—á–∞—Ö –∏ –¥–µ–ª–∞—Ö –≤ –≤–∞—à–µ–π –ª—é–±–∏–º–æ–π —Å–æ—Ü–∏–∞–ª—å–Ω–æ–π —Å–µ—Ç–∏ –∏–ª–∏ –º–µ—Å—Å–µ–Ω–¥–∂–µ—Ä–µ")
}

func getEmailListenerMessage(update tgbot.Update, bot *tgbot.BotAPI) tgbot.MessageConfig {
	msg := tgbot.NewMessage(
		update.Message.Chat.ID,
		"üòÉ –ß—Ç–æ–±—ã –ø–æ–ª—É—á–∞—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –∑–∞–¥–∞—á–∞—Ö –∏–∑ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è delau, –Ω–∞–º –Ω—É–∂–Ω–æ –ø–æ–Ω—è—Ç—å –∫—Ç–æ –≤—ã —Ç–∞–∫–æ–π.")
	bot.Send(msg)
	return tgbot.NewMessage(update.Message.Chat.ID, "–í–≤–µ–¥–∏—Ç–µ –≤–∞—à email:")

}

func getStartMessage(update tgbot.Update) tgbot.MessageConfig {
	msg := tgbot.NewMessage(
		update.Message.Chat.ID,
		"*–í–∞—Å –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –±–æ—Ç Delau* üòÉüñê\n"+
			"\n"+
			"/login ‚û°Ô∏è –ß—Ç–æ–± –ø–æ–ª—É—á–∞—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –∑–∞–¥–∞—á–∞—Ö\n"+
			"/help ‚û°Ô∏è –í—Å–µ –∑–∞–ø—Ä–æ—Å—ã –±–æ—Ç–∞\n"+
			"/info ‚û°Ô∏è –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±–æ—Ç–µ\n")
	msg.ParseMode = "Markdown"
	return msg
}
